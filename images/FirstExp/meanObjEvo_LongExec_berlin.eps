%!PS-Adobe-2.0 EPSF-2.0
%%Title: images/FirstExp/meanObjEvo_LongExec_berlin.eps
%%Creator: gnuplot 5.0 patchlevel 5
%%CreationDate: Sun Apr 23 19:14:26 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/FirstExp/meanObjEvo_LongExec_berlin.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 5)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Apr 23 19:14:26 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
860 800 M
63 0 V
5916 0 R
-63 0 V
stroke
740 800 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.6)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
860 1252 M
63 0 V
5916 0 R
-63 0 V
stroke
740 1252 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.7)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
860 1705 M
63 0 V
5916 0 R
-63 0 V
stroke
740 1705 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.8)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
860 2157 M
63 0 V
5916 0 R
-63 0 V
stroke
740 2157 M
[ [(Helvetica) 200.0 0.0 true true 0 (0.9)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
860 2609 M
63 0 V
5916 0 R
-63 0 V
stroke
740 2609 M
[ [(Helvetica) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
860 3062 M
63 0 V
5916 0 R
-63 0 V
stroke
740 3062 M
[ [(Helvetica) 200.0 0.0 true true 0 (1.1)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
860 3514 M
63 0 V
5916 0 R
-63 0 V
stroke
740 3514 M
[ [(Helvetica) 200.0 0.0 true true 0 (1.2)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
860 3967 M
63 0 V
5916 0 R
-63 0 V
stroke
740 3967 M
[ [(Helvetica) 200.0 0.0 true true 0 (1.3)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
860 4419 M
63 0 V
5916 0 R
-63 0 V
stroke
740 4419 M
[ [(Helvetica) 200.0 0.0 true true 0 (1.4)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1413 800 M
0 63 V
0 3556 R
0 -63 V
stroke
1413 680 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (86400)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
2016 800 M
0 63 V
0 3556 R
0 -63 V
stroke
2016 680 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (172800)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
2619 800 M
0 63 V
0 3556 R
0 -63 V
stroke
2619 680 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (259200)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
3221 800 M
0 63 V
0 3556 R
0 -63 V
stroke
3221 680 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (345600)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
3824 800 M
0 63 V
0 3556 R
0 -63 V
stroke
3824 680 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (432000)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
4427 800 M
0 63 V
0 3556 R
0 -63 V
stroke
4427 680 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (518400)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
5030 800 M
0 63 V
0 3556 R
0 -63 V
stroke
5030 680 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (604800)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
5633 800 M
0 63 V
0 3556 R
0 -63 V
stroke
5633 680 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (691200)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
6236 800 M
0 63 V
0 3556 R
0 -63 V
stroke
6236 680 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (777600)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
6839 800 M
0 63 V
0 3556 R
0 -63 V
stroke
6839 680 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (864000)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
860 4419 N
860 800 L
5979 0 V
0 3619 V
-5979 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
160 2609 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Mean objective function value)]
] -73.3 MCshow
grestore
LTb
LCb setrgbcolor
3849 -220 M
[ [(Helvetica) 220.0 0.0 true true 0 (Time \(seconds\))]
] -73.3 MCshow
LTb
LCb setrgbcolor
3849 4739 M
[ [(Helvetica-Bold) 220.0 0.0 true true 0 (City: berlin - 10 days)]
] -73.3 MCshow
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
5936 4256 M
[ [(Helvetica) 200.0 0.0 true true 0 (MonoGA)]
] -66.7 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 6056 4256 M
543 0 V
860 4320 M
50 -758 V
50 -460 V
51 -307 V
50 -245 V
50 -194 V
50 -232 V
51 -39 V
50 -179 V
50 -26 V
50 -28 V
51 -106 V
50 -23 V
50 -34 V
50 -76 V
51 -72 V
50 -20 V
50 -46 V
50 -43 V
51 -14 V
50 -30 V
50 0 V
50 -11 V
51 -3 V
50 -3 V
50 -6 V
50 -13 V
51 -10 V
50 -4 V
50 -1 V
50 -11 V
51 0 V
50 0 V
50 0 V
50 0 V
51 -6 V
50 -13 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 -2 V
51 -1 V
50 -4 V
50 0 V
50 -1 V
51 0 V
50 0 V
50 0 V
50 0 V
51 -1 V
50 0 V
50 0 V
50 0 V
51 -11 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
50 -1 V
51 0 V
50 0 V
50 0 V
50 -2 V
51 0 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
51 -4 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
stroke 5985 1280 M
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
860 4320 Pls
910 3562 Pls
960 3102 Pls
1011 2795 Pls
1061 2550 Pls
1111 2356 Pls
1161 2124 Pls
1212 2085 Pls
1262 1906 Pls
1312 1880 Pls
1362 1852 Pls
1413 1746 Pls
1463 1723 Pls
1513 1689 Pls
1563 1613 Pls
1614 1541 Pls
1664 1521 Pls
1714 1475 Pls
1764 1432 Pls
1815 1418 Pls
1865 1388 Pls
1915 1388 Pls
1965 1377 Pls
2016 1374 Pls
2066 1371 Pls
2116 1365 Pls
2166 1352 Pls
2217 1342 Pls
2267 1338 Pls
2317 1337 Pls
2367 1326 Pls
2418 1326 Pls
2468 1326 Pls
2518 1326 Pls
2568 1326 Pls
2619 1320 Pls
2669 1307 Pls
2719 1307 Pls
2769 1307 Pls
2820 1307 Pls
2870 1307 Pls
2920 1307 Pls
2970 1307 Pls
3020 1307 Pls
3071 1307 Pls
3121 1307 Pls
3171 1307 Pls
3221 1307 Pls
3272 1307 Pls
3322 1307 Pls
3372 1307 Pls
3422 1307 Pls
3473 1307 Pls
3523 1307 Pls
3573 1307 Pls
3623 1305 Pls
3674 1304 Pls
3724 1300 Pls
3774 1300 Pls
3824 1299 Pls
3875 1299 Pls
3925 1299 Pls
3975 1299 Pls
4025 1299 Pls
4076 1298 Pls
4126 1298 Pls
4176 1298 Pls
4226 1298 Pls
4277 1287 Pls
4327 1287 Pls
4377 1287 Pls
4427 1287 Pls
4478 1287 Pls
4528 1287 Pls
4578 1287 Pls
4628 1287 Pls
4679 1287 Pls
4729 1287 Pls
4779 1287 Pls
4829 1287 Pls
4879 1286 Pls
4930 1286 Pls
4980 1286 Pls
5030 1286 Pls
5080 1284 Pls
5131 1284 Pls
5181 1284 Pls
5231 1284 Pls
5281 1284 Pls
5332 1284 Pls
5382 1284 Pls
5432 1284 Pls
5482 1284 Pls
5533 1280 Pls
5583 1280 Pls
5633 1280 Pls
5683 1280 Pls
5734 1280 Pls
5784 1280 Pls
5834 1280 Pls
5884 1280 Pls
5935 1280 Pls
5985 1280 Pls
6035 1280 Pls
6085 1280 Pls
6136 1280 Pls
6186 1280 Pls
6236 1280 Pls
6286 1280 Pls
6337 1280 Pls
6387 1280 Pls
6437 1280 Pls
6487 1280 Pls
6538 1280 Pls
6588 1280 Pls
6638 1280 Pls
6688 1280 Pls
6739 1280 Pls
6789 1280 Pls
6839 1280 Pls
6327 4256 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C LCb setrgbcolor
5936 4056 M
[ [(Helvetica) 200.0 0.0 true true 0 (NSGA2-Multi-DCN)]
] -66.7 MRshow
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C 6056 4056 M
543 0 V
860 3819 M
50 -800 V
50 -515 V
51 -308 V
50 -192 V
50 -90 V
50 -147 V
51 -47 V
50 -79 V
50 -60 V
50 -30 V
51 -37 V
50 -31 V
50 -27 V
50 -28 V
51 -50 V
50 -3 V
50 -21 V
50 -23 V
51 -8 V
50 -10 V
50 -21 V
50 -19 V
51 -32 V
50 -21 V
50 -12 V
50 -20 V
51 -11 V
50 -9 V
50 -4 V
50 0 V
51 -4 V
50 0 V
50 0 V
50 -1 V
51 -17 V
50 0 V
50 -3 V
50 0 V
51 0 V
50 -1 V
50 0 V
50 -2 V
50 0 V
51 0 V
50 0 V
50 0 V
50 -4 V
51 -7 V
50 0 V
50 -1 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
51 -3 V
50 0 V
50 -2 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
51 -1 V
50 0 V
50 -7 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 -3 V
51 0 V
50 0 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
50 -5 V
50 -2 V
51 0 V
50 0 V
50 0 V
50 -2 V
51 0 V
50 0 V
50 -1 V
50 0 V
51 -3 V
50 -2 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
stroke 5985 1093 M
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 0 V
51 0 V
50 0 V
50 0 V
50 -1 V
51 0 V
50 0 V
50 0 V
860 3819 Crs
910 3019 Crs
960 2504 Crs
1011 2196 Crs
1061 2004 Crs
1111 1914 Crs
1161 1767 Crs
1212 1720 Crs
1262 1641 Crs
1312 1581 Crs
1362 1551 Crs
1413 1514 Crs
1463 1483 Crs
1513 1456 Crs
1563 1428 Crs
1614 1378 Crs
1664 1375 Crs
1714 1354 Crs
1764 1331 Crs
1815 1323 Crs
1865 1313 Crs
1915 1292 Crs
1965 1273 Crs
2016 1241 Crs
2066 1220 Crs
2116 1208 Crs
2166 1188 Crs
2217 1177 Crs
2267 1168 Crs
2317 1164 Crs
2367 1164 Crs
2418 1160 Crs
2468 1160 Crs
2518 1160 Crs
2568 1159 Crs
2619 1142 Crs
2669 1142 Crs
2719 1139 Crs
2769 1139 Crs
2820 1139 Crs
2870 1138 Crs
2920 1138 Crs
2970 1136 Crs
3020 1136 Crs
3071 1136 Crs
3121 1136 Crs
3171 1136 Crs
3221 1132 Crs
3272 1125 Crs
3322 1125 Crs
3372 1124 Crs
3422 1124 Crs
3473 1124 Crs
3523 1124 Crs
3573 1124 Crs
3623 1124 Crs
3674 1121 Crs
3724 1121 Crs
3774 1119 Crs
3824 1119 Crs
3875 1119 Crs
3925 1119 Crs
3975 1119 Crs
4025 1119 Crs
4076 1118 Crs
4126 1118 Crs
4176 1111 Crs
4226 1111 Crs
4277 1111 Crs
4327 1111 Crs
4377 1111 Crs
4427 1111 Crs
4478 1111 Crs
4528 1111 Crs
4578 1111 Crs
4628 1108 Crs
4679 1108 Crs
4729 1108 Crs
4779 1108 Crs
4829 1108 Crs
4879 1108 Crs
4930 1108 Crs
4980 1108 Crs
5030 1103 Crs
5080 1101 Crs
5131 1101 Crs
5181 1101 Crs
5231 1101 Crs
5281 1099 Crs
5332 1099 Crs
5382 1099 Crs
5432 1098 Crs
5482 1098 Crs
5533 1095 Crs
5583 1093 Crs
5633 1093 Crs
5683 1093 Crs
5734 1093 Crs
5784 1093 Crs
5834 1093 Crs
5884 1093 Crs
5935 1093 Crs
5985 1093 Crs
6035 1093 Crs
6085 1093 Crs
6136 1093 Crs
6186 1093 Crs
6236 1093 Crs
6286 1093 Crs
6337 1093 Crs
6387 1093 Crs
6437 1093 Crs
6487 1093 Crs
6538 1093 Crs
6588 1093 Crs
6638 1093 Crs
6688 1092 Crs
6739 1092 Crs
6789 1092 Crs
6839 1092 Crs
6327 4056 Crs
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
860 4419 N
860 800 L
5979 0 V
0 3619 V
-5979 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica-Bold Helvetica
